# -*- coding: utf-8 -*-
"""Copy of Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13lLXwDYnNkPdaHWUQUA6F5qCG9joe-NK

PCA

PCA
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as pyplot
import numpy as np
import pandas as pd 
# %matplotlib inline

from google.colab import drive 
drive.mount('/content/gdrive')

data=pd.read_csv("/content/gdrive/MyDrive/project data/new final input for pca...csv")

data

data.keys()

data.isnull().sum()

def tfuv(df):
  for col in df:
    print(f'{col} : {df[col].unique(),}')

tfuv(data)

data.info()

X = data.drop("IC50",axis=1)
Y = data.IC50

X.shape

Y.shape

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.25)

X_train.shape

from sklearn.linear_model import LogisticRegression

model1 = LogisticRegression()

model1.fit(X_train,Y_train)

model1.score(X_test,Y_test)

# performing preprocessing part
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
 
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.decomposition import PCA
 
pca = PCA(n_components = 2)
 
X_train = pca.fit_transform(X_train)
X_test = pca.transform(X_test)

from sklearn.ensemble import RandomForestClassifier

model2 = RandomForestClassifier()

model2.fit(X_train,Y_train)

model2.score(X_test,Y_test)

from sklearn import svm

clf = svm.SVC()

clf.fit(X_train,Y_train)

clf.score(X_test,Y_test)

import matplotlib.pyplot as plt
plt.figure(figsize=(20,15))
import seaborn as sns
sns.heatmap(data.corr(),annot=True)

